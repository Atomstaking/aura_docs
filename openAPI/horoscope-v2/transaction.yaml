openapi: 3.0.3
info:
  title: Horoscope v2 graphql
  version: 1.0.0
servers:
  - url: https://indexer-v2.dev.aurascan.io
  - url: https://indexer-v2.staging.aurascan.io
tags:
  - name: block
paths:
  /api/v1/graphiql:
    post:
      tags:
        - transaction
      summary: Query transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/transaction'
      responses:
        '200':
          description: Successful operation
components:
  schemas:
    transaction:
      type: object
      properties:
        operationName:
          type: string
          example: queryTransaction
          description: query name
        query:
          type: string
          example: "query queryTransaction( $limit: Int = 100 $order: order_by = desc $compositeKey: String = null $value: String = null $key: String = null $compositeKeyIn: [String!] = null $valueIn: [String!] = null $keyIn: [String!] = null $heightGT: Int = null $heightLT: Int = null $indexGT: Int = null $indexLT: Int = null $hash: String = null $height: Int = null ) { serenity { transaction( limit: $limit where: { hash: { _eq: $hash } height: { _eq: $height } event_attribute_index: { value: { _eq: $value, _in: $valueIn } composite_key: { _eq: $compositeKey, _in: $compositeKeyIn } key: { _eq: $key, _in: $keyIn } } _and: [ { height: { _gt: $heightGT } } { index: { _gt: $indexGT } } { height: { _lt: $heightLT } } { index: { _lt: $indexLT } } ] } order_by: [{ height: $order}, {index: $order }] ) { id height hash timestamp code gas_used gas_wanted data } } }"
          description: Graphql query
        variables:
          type: object
          description: Variable in query
          example:
            limit: 5
            order: desc
            hash: null
            height: null
            compositeKey: null
            value: null
            
